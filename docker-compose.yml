version: '3.8'

networks:
  local-net:
    name: ${LOCAL_NETWORK}
    driver: bridge

services:

  redis:
    image: redis:latest
    container_name: ${COMPOSE_PROJECT_NAME}-redis
    profiles: [ all, redis ]
    restart: ${RESTART_POLICY}
    volumes:
      - ./vol/redis:/data
    networks:
      - local-net
    ports:
      - 6379:6379

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: ${COMPOSE_PROJECT_NAME}-redis-commander
    profiles: [ all, redis ]
    restart: ${RESTART_POLICY}
    networks:
      - local-net
    environment:
    - REDIS_HOSTS=local-db-0:redis:6379:0
    ports:
    - ${REDIS_COMMANDER_PORT}:8081

  mysql:
    image: mysql:latest
    container_name: ${COMPOSE_PROJECT_NAME}-mysql
    profiles: [ all, mysql ]
    restart: ${RESTART_POLICY}
    volumes:
      - ./vol/mysql:/var/lib/mysql
      # - ./setup/mysql.sql:/docker-entrypoint-initdb.d/1.sql
    networks:
      - local-net
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    # gives executable permission to run the init script
    # command: bash -c "chmod +x /docker-entrypoint-initdb.d/1.sql && docker-entrypoint.sh mysqld"

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: ${COMPOSE_PROJECT_NAME}-phpmyadmin
    profiles: [ all, mysql ]
    restart: ${RESTART_POLICY}
    networks:
      - local-net
    ports:
      - ${PHP_MY_ADMIN_PORT}:80
    environment:
      - PMA_ARBITRARY=1
      - UPLOAD_LIMIT=1G
      - PMA_HOSTS=mysql
    depends_on:
      - mysql

  mongo:
    image: mongo:4
    container_name: ${COMPOSE_PROJECT_NAME}-mongo
    profiles: [ all, mongo ]
    restart: ${RESTART_POLICY}
    volumes:
      - ./vol/mongo:/data/db
    networks:
      - local-net
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}

  mongo-express:
    image: mongo-express:latest
    container_name: ${COMPOSE_PROJECT_NAME}-mongo_express
    profiles: [ all, mongo ]
    restart: ${RESTART_POLICY}
    networks:
      - local-net
    ports:
      - ${MONGO_EXPRESS_PORT}:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo:27017/
    depends_on:
      - mongo

  psql:
    image: postgres:latest
    container_name: ${COMPOSE_PROJECT_NAME}-psql
    profiles: [ all, psql ]
    restart: ${RESTART_POLICY}
    volumes:
      - ./vol/psql:/var/lib/postgresql/data
    networks:
      - local-net
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  adminer:
    image: adminer:latest
    container_name: ${COMPOSE_PROJECT_NAME}-adminer
    profiles: [ all, psql ]
    restart: ${RESTART_POLICY}
    networks:
      - local-net
    ports:
      - ${ADMINER_PORT}:8080
    environment:
      - ADMINER_UPLOAD_LIMIT=1G
    depends_on:
      - psql
